// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::prelude::*;
use chrono::NaiveDateTime;
use diesel::Selectable;
use serde::{Deserialize, Serialize};
use uuid::Uuid;
use diesel::sql_types::Serial;

// use crate::schema::messages::message_id as message_id;

#[derive(Queryable, Debug, Selectable, Insertable, Serialize, Clone)]
#[diesel(primary_key(message_id))]
#[diesel(table_name = crate::schema::messages)]
pub struct Message {
    pub message_id: i32,
    pub topic_id: Uuid,
    pub user_id: Uuid,
    pub content: String,
    pub sent_at: NaiveDateTime,
}

#[derive(Queryable, Debug, Selectable, Serialize, Insertable, Deserialize)]
#[diesel(primary_key(topic_id))]
#[diesel(table_name = crate::schema::topics)]
pub struct Topic {
    pub topic_id: Uuid,
    pub name: String,
    pub description: String,
}

#[derive(Queryable, Debug, Selectable, Insertable, Serialize)]
#[diesel(primary_key(user_id))]
#[diesel(table_name = crate::schema::users)]
pub struct User {
    pub user_id: Uuid,
    pub username: String,
}

